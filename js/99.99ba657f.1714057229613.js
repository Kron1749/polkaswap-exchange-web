"use strict";(self.webpackChunkpolkaswap_exchange_web=self.webpackChunkpolkaswap_exchange_web||[]).push([[99],{50099:function(e,t,o){o.r(t),o.d(t,{default:function(){return h}});var i=o(23166),r=o(70655),a=o(36930),s=o(82753),n=o(22620),l=o(89445),d=o(89334),p=o(68282),c=o(69781),u=o(49053);let m=class extends((0,l.Wr)(n.tA.FormattedAmountMixin,d.Z)){constructor(...e){super(...e),(0,i.Z)(this,"networkFees",void 0),(0,i.Z)(this,"liquidityProviderFee",void 0),(0,i.Z)(this,"rewards",void 0),(0,i.Z)(this,"route",void 0),(0,i.Z)(this,"isExchangeB",void 0),(0,i.Z)(this,"price",void 0),(0,i.Z)(this,"priceReversed",void 0),(0,i.Z)(this,"isLoggedIn",void 0),(0,i.Z)(this,"tokenFrom",void 0),(0,i.Z)(this,"tokenTo",void 0),(0,i.Z)(this,"minMaxReceived",void 0),(0,i.Z)(this,"priceImpact",void 0),(0,i.Z)(this,"getAsset",void 0),(0,i.Z)(this,"infoOnly",void 0)}get liquidityProviderFeeTooltipText(){return this.t("swap.liquidityProviderFeeTooltip",{liquidityProviderFee:this.liquidityProviderFeeValue})}get swapRoute(){return this.route.map((e=>this.getAsset(e)?.symbol??"?"))}get priceValues(){const e=this.tokenFrom?.symbol??"",t=this.tokenTo?.symbol??"";return[{id:"from",label:this.t("firstPerSecond",{first:e,second:t}),value:this.formatStringValue(this.price)},{id:"to",label:this.t("firstPerSecond",{first:t,second:e}),value:this.formatStringValue(this.priceReversed)}]}get priceImpactFormatted(){return this.formatStringValue(this.priceImpact)}get rewardsValues(){return this.rewards.map(((e,t)=>{const o=s.KnownAssets.get(e.currency),i=this.formatCodecNumber(e.amount);return{value:i,fiatValue:this.getFiatAmountByString(i,o),assetSymbol:o?.symbol??"",label:0===t?this.t("swap.rewardsForSwap"):""}}))}get networkFee(){return this.networkFees[a.Operation.Swap]}get networkFeeFormatted(){return this.formatCodecNumber(this.networkFee)}get liquidityProviderFeeValue(){return this.formatStringValue("0.3")}get formattedLiquidityProviderFee(){return this.formatCodecNumber(this.liquidityProviderFee)}get formattedMinMaxReceived(){const e=(this.isExchangeB?this.tokenFrom:this.tokenTo)?.decimals;return this.formatCodecNumber(this.minMaxReceived,e)}get xorSymbol(){return" "+s.XOR.symbol}get getAssetSymbolText(){return(this.isExchangeB?this.tokenFrom:this.tokenTo)?.symbol??""}};(0,r.__decorate)([u.SB.wallet.settings.networkFees],m.prototype,"networkFees",void 0),(0,r.__decorate)([u.SB.swap.liquidityProviderFee],m.prototype,"liquidityProviderFee",void 0),(0,r.__decorate)([u.SB.swap.rewards],m.prototype,"rewards",void 0),(0,r.__decorate)([u.SB.swap.route],m.prototype,"route",void 0),(0,r.__decorate)([u.SB.swap.isExchangeB],m.prototype,"isExchangeB",void 0),(0,r.__decorate)([u.Yn.swap.price],m.prototype,"price",void 0),(0,r.__decorate)([u.Yn.swap.priceReversed],m.prototype,"priceReversed",void 0),(0,r.__decorate)([u.Yn.wallet.account.isLoggedIn],m.prototype,"isLoggedIn",void 0),(0,r.__decorate)([u.Yn.swap.tokenFrom],m.prototype,"tokenFrom",void 0),(0,r.__decorate)([u.Yn.swap.tokenTo],m.prototype,"tokenTo",void 0),(0,r.__decorate)([u.Yn.swap.minMaxReceived],m.prototype,"minMaxReceived",void 0),(0,r.__decorate)([u.Yn.swap.priceImpact],m.prototype,"priceImpact",void 0),(0,r.__decorate)([u.Yn.assets.assetDataByAddress],m.prototype,"getAsset",void 0),(0,r.__decorate)([(0,l.fI)({default:!0,type:Boolean})],m.prototype,"infoOnly",void 0),m=(0,r.__decorate)([(0,l.wA)({components:{ValueStatusWrapper:(0,c.kF)(p.z8.ValueStatusWrapper),TransactionDetails:(0,c.kF)(p.z8.TransactionDetails),FormattedAmount:n.wx.FormattedAmount,InfoLine:n.wx.InfoLine}})],m);var v=m,h=(0,o(1001).Z)(v,(function(){var e=this,t=e._self._c;e._self._setupProxy;return t("transaction-details",{attrs:{"info-only":e.infoOnly}},[t("div",{staticClass:"swap-info-container"},[e._l(e.priceValues,(function({id:e,label:o,value:i}){return t("info-line",{key:e,attrs:{label:o,value:i}})})),t("info-line",{attrs:{label:e.t("swap."+(e.isExchangeB?"maxSold":"minReceived")),"label-tooltip":e.t("swap.minReceivedTooltip"),value:e.formattedMinMaxReceived,"asset-symbol":e.getAssetSymbolText,"fiat-value":e.getFiatAmountByCodecString(e.minMaxReceived,e.isExchangeB?e.tokenFrom:e.tokenTo),"is-formatted":""}}),e._l(e.rewardsValues,(function(o,i){return t("info-line",e._b({key:i},"info-line",o,!1))})),t("info-line",{attrs:{label:e.t("swap.priceImpact"),"label-tooltip":e.t("swap.priceImpactTooltip")}},[t("value-status-wrapper",{attrs:{value:e.priceImpact}},[t("formatted-amount",{staticClass:"swap-value",attrs:{value:e.priceImpactFormatted}},[e._v("%")])],1)],1),t("info-line",{attrs:{label:e.t("swap.route")}},[t("div",{staticClass:"swap-route"},[t("div",{staticClass:"swap-route-paths s-flex"},e._l(e.swapRoute,(function(o,i){return t("div",{key:o,staticClass:"swap-route-value"},[t("span",[e._v(e._s(o))]),i!==e.swapRoute.length-1?t("s-icon",{attrs:{name:"el-icon el-icon-arrow-right swap-route-icon"}}):e._e()],1)})),0)])]),t("info-line",{attrs:{label:e.t("swap.liquidityProviderFee"),"label-tooltip":e.liquidityProviderFeeTooltipText,value:e.formattedLiquidityProviderFee,"asset-symbol":e.xorSymbol,"is-formatted":""}}),e.isLoggedIn?t("info-line",{attrs:{label:e.t("networkFeeText"),"label-tooltip":e.t("networkFeeTooltipText"),value:e.networkFeeFormatted,"asset-symbol":e.xorSymbol,"fiat-value":e.getFiatAmountByCodecString(e.networkFee),"is-formatted":""}}):e._e()],2)])}),[],!1,null,"3dd08286",null).exports}}]);
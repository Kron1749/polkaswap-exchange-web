"use strict";(self.webpackChunkpolkaswap_exchange_web=self.webpackChunkpolkaswap_exchange_web||[]).push([[7022],{57022:function(e,t,i){i.r(t),i.d(t,{default:function(){return w}});var s=i(23166),n=(i(70560),i(70655)),o=i(36930),a=i(82753),r=i(22620),c=i(89445),l=i(14930),d=i(47614),u=i(25013),g=i(95405),m=i(68282),h=i(69781),v=i(1318),b=i(49053),p=i(50961);let f=class extends((0,c.Wr)(r.tA.FormattedAmountMixin,r.tA.NetworkFeeWarningMixin,l.Z,u.Z,d.Z,g.Z)){constructor(...e){super(...e),(0,s.Z)(this,"KnownSymbols",a.KnownSymbols),(0,s.Z)(this,"FocusedField",v.G),(0,s.Z)(this,"subBridgeConnector",void 0),(0,s.Z)(this,"balancesFetching",void 0),(0,s.Z)(this,"feesAndLockedFundsFetching",void 0),(0,s.Z)(this,"registeredAssetsFetching",void 0),(0,s.Z)(this,"amountSend",void 0),(0,s.Z)(this,"amountReceived",void 0),(0,s.Z)(this,"senderName",void 0),(0,s.Z)(this,"recipientName",void 0),(0,s.Z)(this,"isRegisteredAsset",void 0),(0,s.Z)(this,"operation",void 0),(0,s.Z)(this,"autoselectedAssetAddress",void 0),(0,s.Z)(this,"nodeIsConnected",void 0),(0,s.Z)(this,"setSoraToEvm",void 0),(0,s.Z)(this,"setHistoryId",void 0),(0,s.Z)(this,"setFocusedField",void 0),(0,s.Z)(this,"setSelectNetworkDialogVisibility",void 0),(0,s.Z)(this,"setSendedAmount",void 0),(0,s.Z)(this,"setReceivedAmount",void 0),(0,s.Z)(this,"switchDirection",void 0),(0,s.Z)(this,"setAssetAddress",void 0),(0,s.Z)(this,"generateHistoryItem",void 0),(0,s.Z)(this,"addAssetToAccountAssets",void 0),(0,s.Z)(this,"showSelectTokenDialog",!1),(0,s.Z)(this,"showConfirmTransactionDialog",!1),(0,s.Z)(this,"showWarningExternalFeeDialog",!1),(0,s.Z)(this,"isWarningExternalFeeDialogConfirmed",!1),(0,s.Z)(this,"selectSubNodeDialogVisibility",void 0),(0,s.Z)(this,"setSelectSubNodeDialogVisibility",void 0)}get subConnection(){return this.isSubBridge?this.networkSelected!==this.subBridgeConnector.network?.subNetwork?null:this.subBridgeConnector.network?.subNetworkConnection:null}get isExternalNetworkLoading(){return this.isSubBridge?!this.subConnection?.nodeIsConnected:!!this.evmProviderLoading}confirmExternalNetworkFeeWarningDialog(){this.isWarningExternalFeeDialogConfirmed=!0}openWarningExternalFeeDialog(){this.showWarningExternalFeeDialog=!0}async waitOnExternalFeeWarningConfirmation(e=500){if(this.showWarningExternalFeeDialog)return await(0,p.gw)(e),await this.waitOnExternalFeeWarningConfirmation()}get areAccountsConnected(){return!!this.sender&&!!this.recipient}get networkName(){return this.formatNetworkShortName(!1)}get firstBalance(){return this.sender?this.getBalance(this.isSoraToEvm):null}get secondBalance(){return this.recipient?this.getBalance(!this.isSoraToEvm):null}get isZeroAmountSend(){return(0,p.yA)(this.amountSend)}get isZeroAmountReceived(){return(0,p.yA)(this.amountReceived)}get transferMaxAmount(){return this.getTransferMaxAmount(this.isSoraToEvm)}get transferMinAmount(){return this.getTransferMinAmount(this.isSoraToEvm)}get transferableAmount(){if(!(this.asset&&this.isRegisteredAsset&&this.areAccountsConnected))return o.FPNumber.ZERO;const e=this.isSoraToEvm?this.soraNetworkFee:this.externalNetworkFee,t=o.FPNumber.fromCodecValue(this.assetExternalMinBalance,this.asset.externalDecimals);return(0,p.Ys)(this.asset,e,{isExternalBalance:!this.isSoraToEvm,isExternalNative:this.isNativeTokenSelected}).sub(t).max(o.FPNumber.ZERO)}get maxValue(){let e=this.transferableAmount;return this.transferMaxAmount&&o.FPNumber.gt(e,this.transferMaxAmount)&&(e=this.transferMaxAmount),e.dp(this.amountDecimals).toString()}get isMaxAvailable(){return!(0,p.yA)(this.maxValue)&&this.maxValue!==this.amountSend}get isGreaterThanMaxAmount(){return this.isGreaterThanTransferMaxAmount(this.amountSend,this.asset,this.isSoraToEvm,this.isRegisteredAsset)}get isLowerThanMinAmount(){return this.isLowerThanTransferMinAmount(this.amountSend,this.asset,this.isSoraToEvm,this.isRegisteredAsset)}get isInsufficientXorForFee(){return(0,p.LG)(this.xor,this.soraNetworkFee)}get isInsufficientNativeTokenForFee(){return(0,p.lm)(this.externalNativeBalance,this.externalNetworkFee)}get isInsufficientBalance(){return!!(this.asset&&this.isRegisteredAsset&&this.sender)&&o.FPNumber.gt(o.FPNumber.fromNatural(this.amountSend),o.FPNumber.fromNatural(this.maxValue))}get isAssetSelected(){return!!this.asset}get assetSymbol(){return this.asset?.symbol??""}get formattedSoraNetworkFee(){return this.getStringFromCodec(this.soraNetworkFee)}get formattedExternalNetworkFee(){return this.getStringFromCodec(this.externalNetworkFee,this.nativeTokenDecimals)}get formattedExternalTransferFee(){return this.getStringFromCodec(this.externalTransferFee,this.asset?.externalDecimals)}get formattedExternalMinBalance(){return this.getStringFromCodec(this.assetExternalMinBalance,this.asset?.externalDecimals)}get isConfirmTxDisabled(){return!this.isAssetSelected||!this.isRegisteredAsset||!this.areAccountsConnected||!this.isValidNetwork||this.isZeroAmountSend||this.isZeroAmountReceived||this.isInsufficientXorForFee||this.isInsufficientNativeTokenForFee||this.isInsufficientBalance||this.isGreaterThanMaxAmount||this.isLowerThanMinAmount}get isConfirmTxLoading(){return this.isExternalNetworkLoading||this.isSelectAssetLoading||this.balancesFetching||this.feesAndLockedFundsFetching||this.registeredAssetsFetching}get isXorSufficientForNextOperation(){return!!this.asset&&this.isXorSufficientForNextTx({type:this.operation,isXor:(0,p.AN)(this.asset),amount:this.getFPNumber(this.amountSend)})}get isNativeTokenSufficientForNextOperation(){if(!this.asset||this.isZeroAmountSend)return!1;const e=o.FPNumber.fromCodecValue(this.externalNetworkFee,this.nativeTokenDecimals);let t=o.FPNumber.fromCodecValue(this.externalNativeBalance,this.nativeTokenDecimals).sub(e);if(this.isNativeTokenSelected){const e=new o.FPNumber(this.amountSend,this.nativeTokenDecimals);t=this.isSoraToEvm?t.add(e):t.sub(e)}return o.FPNumber.gte(t,e)}get amountDecimals(){const e=this.asset?.decimals??o.FPNumber.DEFAULT_PRECISION,t=this.asset?.externalDecimals??o.FPNumber.DEFAULT_PRECISION;return Math.min(e,t)}get changeSenderWalletEvm(){return!this.isSubBridge&&!!this.evmProvider&&!this.isSoraToEvm}get changeRecipientWalletEvm(){return!this.isSubBridge&&!!this.evmProvider&&this.isSoraToEvm}getBalance(e=!0){if(!this.asset||!this.isRegisteredAsset&&!e)return null;const t=(0,p.rh)(this.asset,{internal:e});if(!t)return null;const i=e?this.asset?.decimals:this.asset?.externalDecimals;return this.getFPNumberFromCodec(t,i)}async created(){await this.withParentLoading((async()=>{const{address:e,amount:t,isIncoming:i}=this.$route.params;this.setSendedAmount(t),i&&this.setSoraToEvm(!1),e&&this.updateAssetAddress(e)}))}getCopyTooltip(e=!1){return`${this.formatNetworkShortName(e)} ${this.t("addressText")}`}handleMaxValue(){this.setSendedAmount(this.maxValue)}async handleConfirmButtonClick(){if(this.allowFeePopup&&!this.isXorSufficientForNextOperation){if(this.openWarningFeeDialog(),await this.waitOnFeeWarningConfirmation(),!this.isWarningFeeDialogConfirmed)return;this.isWarningFeeDialogConfirmed=!1}if(this.allowFeePopup&&!this.isNativeTokenSufficientForNextOperation){if(this.openWarningExternalFeeDialog(),await this.waitOnExternalFeeWarningConfirmation(),!this.isWarningExternalFeeDialogConfirmed)return;this.isWarningExternalFeeDialogConfirmed=!1}this.showConfirmTransactionDialog=!0}handleChangeNetwork(){this.setSelectNetworkDialogVisibility(!0)}handleChangeSubNode(){this.isSubBridge&&this.setSelectSubNodeDialogVisibility(!0)}openSelectAssetDialog(){this.showSelectTokenDialog=!0}async selectAsset(e){e&&await this.updateAssetAddress(e.address)}async updateAssetAddress(e){await this.withSelectAssetLoading((async()=>{await this.setAssetAddress(e)}))}async confirmTransaction(e){if(!e)return;const{assetAddress:t,id:i}=await this.generateHistoryItem();t&&!this.accountAssetsAddressTable[t]&&await this.addAssetToAccountAssets(t),this.setHistoryId(i),h.ZP.push({name:m.sn.BridgeTransaction})}connectExternalWallet(){this.isSubBridge?this.connectSubWallet():this.connectEvmWallet()}connectSenderWallet(){this.isSoraToEvm||this.isSubBridge?this.connectSoraWallet():this.connectExternalWallet()}connectRecipientWallet(){this.isSoraToEvm?this.connectExternalWallet():this.connectInternalWallet()}connectInternalWallet(){this.isSubBridge?this.connectSubWallet():this.connectSoraWallet()}};(0,n.__decorate)([b.SB.bridge.subBridgeConnector],f.prototype,"subBridgeConnector",void 0),(0,n.__decorate)([b.SB.bridge.balancesFetching],f.prototype,"balancesFetching",void 0),(0,n.__decorate)([b.SB.bridge.feesAndLockedFundsFetching],f.prototype,"feesAndLockedFundsFetching",void 0),(0,n.__decorate)([b.SB.assets.registeredAssetsFetching],f.prototype,"registeredAssetsFetching",void 0),(0,n.__decorate)([b.SB.bridge.amountSend],f.prototype,"amountSend",void 0),(0,n.__decorate)([b.SB.bridge.amountReceived],f.prototype,"amountReceived",void 0),(0,n.__decorate)([b.Yn.bridge.senderName],f.prototype,"senderName",void 0),(0,n.__decorate)([b.Yn.bridge.recipientName],f.prototype,"recipientName",void 0),(0,n.__decorate)([b.Yn.bridge.isRegisteredAsset],f.prototype,"isRegisteredAsset",void 0),(0,n.__decorate)([b.Yn.bridge.operation],f.prototype,"operation",void 0),(0,n.__decorate)([b.Yn.bridge.autoselectedAssetAddress],f.prototype,"autoselectedAssetAddress",void 0),(0,n.__decorate)([b.Yn.settings.nodeIsConnected],f.prototype,"nodeIsConnected",void 0),(0,n.__decorate)([b.QF.bridge.setSoraToEvm],f.prototype,"setSoraToEvm",void 0),(0,n.__decorate)([b.QF.bridge.setHistoryId],f.prototype,"setHistoryId",void 0),(0,n.__decorate)([b.QF.bridge.setFocusedField],f.prototype,"setFocusedField",void 0),(0,n.__decorate)([b.QF.web3.setSelectNetworkDialogVisibility],f.prototype,"setSelectNetworkDialogVisibility",void 0),(0,n.__decorate)([b.aD.bridge.setSendedAmount],f.prototype,"setSendedAmount",void 0),(0,n.__decorate)([b.aD.bridge.setReceivedAmount],f.prototype,"setReceivedAmount",void 0),(0,n.__decorate)([b.aD.bridge.switchDirection],f.prototype,"switchDirection",void 0),(0,n.__decorate)([b.aD.bridge.setAssetAddress],f.prototype,"setAssetAddress",void 0),(0,n.__decorate)([b.aD.bridge.generateHistoryItem],f.prototype,"generateHistoryItem",void 0),(0,n.__decorate)([b.aD.wallet.account.addAsset],f.prototype,"addAssetToAccountAssets",void 0),(0,n.__decorate)([b.SB.web3.selectSubNodeDialogVisibility],f.prototype,"selectSubNodeDialogVisibility",void 0),(0,n.__decorate)([b.QF.web3.setSelectSubNodeDialogVisibility],f.prototype,"setSelectSubNodeDialogVisibility",void 0),f=(0,n.__decorate)([(0,c.wA)({components:{BridgeSelectAsset:(0,h.kF)(m.z8.BridgeSelectAsset),BridgeSelectNetwork:(0,h.kF)(m.z8.BridgeSelectNetwork),BridgeSelectAccount:(0,h.kF)(m.z8.BridgeSelectAccount),BridgeAccountPanel:(0,h.kF)(m.z8.BridgeAccountPanel),BridgeNodeIcon:(0,h.kF)(m.z8.BridgeNodeIcon),BridgeTransactionDetails:(0,h.kF)(m.z8.BridgeTransactionDetails),BridgeLimitCard:(0,h.kF)(m.z8.BridgeLimitCard),SelectProviderDialog:(0,h.kF)(m.z8.SelectProviderDialog),SelectNodeDialog:(0,h.kF)(m.z8.SelectNodeDialog),GenericPageHeader:(0,h.kF)(m.z8.GenericPageHeader),ConfirmBridgeTransactionDialog:(0,h.kF)(m.z8.ConfirmBridgeTransactionDialog),NetworkFeeWarningDialog:(0,h.kF)(m.z8.NetworkFeeWarningDialog),TokenSelectButton:(0,h.kF)(m.z8.TokenSelectButton),SwapStatusActionBadge:(0,h.kF)(m.z8.SwapStatusActionBadge),TokenInput:(0,h.kF)(m.z8.TokenInput),FormattedAmount:r.wx.FormattedAmount,FormattedAmountWithFiatValue:r.wx.FormattedAmountWithFiatValue,InfoLine:r.wx.InfoLine,TokenAddress:r.wx.TokenAddress}})],f);var S=f,w=(0,i(1001).Z)(S,(function(){var e=this,t=e._self._c;e._self._setupProxy;return t("div",{staticClass:"bridge s-flex"},[t("s-form",{staticClass:"bridge-form",attrs:{"show-message":!1}},[t("s-card",{directives:[{name:"loading",rawName:"v-loading",value:e.parentLoading,expression:"parentLoading"}],staticClass:"bridge-content",attrs:{"border-radius":"medium",shadow:"always",size:"big",primary:""}},[t("generic-page-header",{staticClass:"header--bridge",attrs:{title:e.t("hashiBridgeText"),tooltip:e.t("bridge.info")}},[t("div",{staticClass:"bridge-header-buttons"},[e.areAccountsConnected?t("s-button",{staticClass:"el-button--history",attrs:{type:"action",icon:"time-time-history-24",tooltip:e.t("bridgeHistory.showHistory"),"tooltip-placement":"bottom-end"},on:{click:e.handleViewTransactionsHistory}}):e._e(),t("swap-status-action-badge",{scopedSlots:e._u([{key:"value",fn:function(){return[e._v(" "+e._s(e.selectedNetworkShortName||"-")+" ")]},proxy:!0},{key:"action",fn:function(){return[t("s-button",{staticClass:"el-button--settings",attrs:{type:"action",icon:"basic-settings-24",tooltip:e.t("bridge.selectNetwork"),"tooltip-placement":"bottom-end"},on:{click:e.handleChangeNetwork}})]},proxy:!0}])})],1)]),t("token-input",{attrs:{id:"bridgeFrom","data-test-name":"bridgeFrom",balance:e.firstBalance?e.firstBalance.toCodecString():null,decimals:e.amountDecimals,disabled:!(e.areAccountsConnected&&e.isAssetSelected),external:!e.isSoraToEvm,"is-max-available":e.isMaxAvailable,"is-select-available":!e.autoselectedAssetAddress,loading:e.isConfirmTxLoading,value:e.amountSend,title:e.t("transfers.from"),token:e.asset},on:{input:e.setSendedAmount,focus:function(t){return e.setFocusedField(e.FocusedField.Sended)},max:e.handleMaxValue,select:e.openSelectAssetDialog},scopedSlots:e._u([{key:"title-append",fn:function(){return[t("span",{staticClass:"input-title--network"},[e._v(e._s(e.formatSelectedNetwork(e.isSoraToEvm)))]),t("i",{class:`network-icon network-icon--${e.getNetworkIcon(e.isSoraToEvm?0:e.networkSelected)}`}),e.isSubBridge&&!e.isSoraToEvm?t("bridge-node-icon",{attrs:{connection:e.subConnection},on:{click:e.handleChangeSubNode}}):e._e()]},proxy:!0}])},[e.sender?t("div",{staticClass:"connect-wallet-panel"},[t("s-divider",{attrs:{type:"tertiary"}}),t("bridge-account-panel",{attrs:{address:e.sender,name:e.senderName,tooltip:e.getCopyTooltip(e.isSoraToEvm)},scopedSlots:e._u([e.changeSenderWalletEvm?{key:"icon",fn:function(){return[t("img",{staticClass:"connect-wallet-logo",attrs:{src:e.getEvmProviderIcon(e.evmProvider),alt:e.evmProvider}})]},proxy:!0}:null],null,!0)}),t("div",{staticClass:"connect-wallet-group"},[e.changeSenderWalletEvm?t("span",{staticClass:"connect-wallet-btn",on:{click:e.connectExternalWallet}},[e._v(" "+e._s(e.t("changeAccountText"))+" ")]):t("span",[e._v(e._s(e.t("connectedText")))]),e.changeSenderWalletEvm?t("span",{staticClass:"connect-wallet-btn disconnect",on:{click:e.resetEvmProviderConnection}},[e._v(" "+e._s(e.t("disconnectWalletText"))+" ")]):e._e()])],1):t("s-button",{staticClass:"el-button--connect s-typography-button--large",attrs:{"data-test-name":"connectPolkadot",type:"primary"},on:{click:e.connectSenderWallet}},[e._v(" "+e._s(e.t("connectWalletText"))+" ")])],1),t("s-button",{staticClass:"s-button--switch",attrs:{"data-test-name":"switchToken",type:"action",icon:"arrows-swap-90-24",disabled:e.isConfirmTxLoading},on:{click:e.switchDirection}}),t("token-input",{attrs:{id:"bridgeTo","data-test-name":"bridgeTo",balance:e.secondBalance?e.secondBalance.toCodecString():null,decimals:e.amountDecimals,disabled:!(e.areAccountsConnected&&e.isAssetSelected),external:e.isSoraToEvm,loading:e.isConfirmTxLoading,value:e.amountReceived,title:e.t("transfers.to"),token:e.asset},on:{input:e.setReceivedAmount,focus:function(t){return e.setFocusedField(e.FocusedField.Received)},select:e.openSelectAssetDialog},scopedSlots:e._u([{key:"title-append",fn:function(){return[t("span",{staticClass:"input-title--network"},[e._v(e._s(e.formatSelectedNetwork(!e.isSoraToEvm)))]),t("i",{class:`network-icon network-icon--${e.getNetworkIcon(e.isSoraToEvm?e.networkSelected:0)}`}),e.isSubBridge&&e.isSoraToEvm?t("bridge-node-icon",{attrs:{connection:e.subConnection},on:{click:e.handleChangeSubNode}}):e._e()]},proxy:!0}])},[e.recipient?t("div",{staticClass:"connect-wallet-panel"},[t("s-divider",{attrs:{type:"tertiary"}}),t("bridge-account-panel",{attrs:{address:e.recipient,name:e.recipientName,tooltip:e.getCopyTooltip(!e.isSoraToEvm)},scopedSlots:e._u([e.changeRecipientWalletEvm?{key:"icon",fn:function(){return[t("img",{staticClass:"connect-wallet-logo",attrs:{src:e.getEvmProviderIcon(e.evmProvider),alt:e.evmProvider}})]},proxy:!0}:null],null,!0)}),t("div",{staticClass:"connect-wallet-group"},[e.isSubBridge||e.changeRecipientWalletEvm?t("span",{staticClass:"connect-wallet-btn",on:{click:e.connectExternalWallet}},[e._v(" "+e._s(e.t("changeAccountText"))+" ")]):t("span",[e._v(e._s(e.t("connectedText")))]),e.changeRecipientWalletEvm?t("span",{staticClass:"connect-wallet-btn disconnect",on:{click:e.resetEvmProviderConnection}},[e._v(" "+e._s(e.t("disconnectWalletText"))+" ")]):e._e()])],1):t("s-button",{staticClass:"el-button--connect s-typography-button--large",attrs:{"data-test-name":"useMetamaskProvider",type:"primary"},on:{click:e.connectRecipientWallet}},[e._v(" "+e._s(e.t("connectWalletText"))+" ")])],1),!e.isValidNetwork&&e.areAccountsConnected?t("s-button",{staticClass:"el-button--next s-typography-button--big",attrs:{type:"primary"},on:{click:e.changeEvmNetworkProvided}},[e._v(" "+e._s(e.t("changeNetworkText"))+" ")]):e.areAccountsConnected?[t("s-button",{staticClass:"el-button--next s-typography-button--large",attrs:{"data-test-name":"nextButton",type:"primary",disabled:e.isConfirmTxDisabled,loading:e.isConfirmTxLoading},on:{click:e.handleConfirmButtonClick}},[e.isAssetSelected?e.isRegisteredAsset?e.isZeroAmountSend?[e._v(" "+e._s(e.t("buttons.enterAmount"))+" ")]:e.isZeroAmountReceived?[e._v(" "+e._s(e.t("swap.insufficientAmount",{tokenSymbol:e.assetSymbol}))+" ")]:e.isInsufficientBalance?[e._v(" "+e._s(e.t("insufficientBalanceText",{tokenSymbol:e.assetSymbol}))+" ")]:e.isInsufficientXorForFee?[e._v(" "+e._s(e.t("insufficientBalanceText",{tokenSymbol:e.KnownSymbols.XOR}))+" ")]:e.isInsufficientNativeTokenForFee?[e._v(" "+e._s(e.t("insufficientBalanceText",{tokenSymbol:e.nativeTokenSymbol}))+" ")]:e.isGreaterThanMaxAmount?[e._v(" "+e._s(e.t("exceededAmountText",{amount:e.t("maxAmountText")}))+" ")]:e.isLowerThanMinAmount?[e._v(" "+e._s(e.t("exceededAmountText",{amount:e.t("minAmountText")}))+" ")]:[e._v(" "+e._s(e.t("bridge.next"))+" ")]:[e._v(" "+e._s(e.t("bridge.notRegisteredAsset",{assetSymbol:e.assetSymbol}))+" ")]:[e._v(" "+e._s(e.t("buttons.chooseAToken"))+" ")]],2),e.isLowerThanMinAmount||e.isGreaterThanMaxAmount?t("bridge-limit-card",{staticClass:"bridge-limit-card",attrs:{max:e.isGreaterThanMaxAmount,amount:(e.isGreaterThanMaxAmount?e.transferMaxAmount:e.transferMinAmount).toLocaleString(),symbol:e.asset.symbol}}):e._e(),!e.isZeroAmountReceived&&e.isRegisteredAsset?t("bridge-transaction-details",{staticClass:"info-line-container",attrs:{asset:e.asset,"native-token":e.nativeToken,"external-transfer-fee":e.formattedExternalTransferFee,"external-network-fee":e.formattedExternalNetworkFee,"external-min-balance":e.formattedExternalMinBalance,"sora-network-fee":e.formattedSoraNetworkFee,"network-name":e.networkName}}):e._e()]:e._e()],2)],1),e.areAccountsConnected?e._e():t("div",{staticClass:"bridge-footer"},[e._v(e._s(e.t("bridge.connectWallets")))]),t("bridge-select-asset",{attrs:{visible:e.showSelectTokenDialog,asset:e.asset},on:{"update:visible":function(t){e.showSelectTokenDialog=t},select:e.selectAsset}}),t("bridge-select-account"),t("bridge-select-network"),t("select-provider-dialog"),e.subConnection?t("select-node-dialog",{attrs:{connection:e.subConnection,network:e.selectedNetworkName,visibility:e.selectSubNodeDialogVisibility,"set-visibility":e.setSelectSubNodeDialogVisibility}}):e._e(),t("confirm-bridge-transaction-dialog",{attrs:{visible:e.showConfirmTransactionDialog,"is-sora-to-evm":e.isSoraToEvm,asset:e.asset,"amount-send":e.amountSend,"amount-received":e.amountReceived,network:e.networkSelected,"network-type":e.networkType,"native-token":e.nativeToken,"external-transfer-fee":e.formattedExternalTransferFee,"external-network-fee":e.formattedExternalNetworkFee,"sora-network-fee":e.formattedSoraNetworkFee},on:{"update:visible":function(t){e.showConfirmTransactionDialog=t},confirm:e.confirmTransaction}}),t("network-fee-warning-dialog",{attrs:{visible:e.showWarningFeeDialog,fee:e.formatStringValue(e.formattedSoraNetworkFee)},on:{"update:visible":function(t){e.showWarningFeeDialog=t},confirm:e.confirmNetworkFeeWariningDialog}}),t("network-fee-warning-dialog",{attrs:{visible:e.showWarningExternalFeeDialog,fee:e.formatStringValue(e.formattedExternalNetworkFee),symbol:e.nativeTokenSymbol,payoff:!1},on:{"update:visible":function(t){e.showWarningExternalFeeDialog=t},confirm:e.confirmExternalNetworkFeeWarningDialog}})],1)}),[],!1,null,"2499d30f",null).exports}}]);